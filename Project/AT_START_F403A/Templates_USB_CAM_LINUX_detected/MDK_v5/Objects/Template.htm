<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Dec 04 18:47:15 2020
<BR><P>
<H3>Maximum Stack Usage =        132 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2a]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[5c]">ACC_IRQHandler</a> from at32f4xx_it.o(i.ACC_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2a]">ADC1_2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[47]">ADC3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[12]">BusFault_Handler</a> from at32f4xx_it.o(i.BusFault_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2d]">CAN1_RX1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2e]">CAN1_SCE_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[59]">CAN2_RX0_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5a]">CAN2_RX1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5b]">CAN2_SCE_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[58]">CAN2_TX_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[23]">DMA1_Channel1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[24]">DMA1_Channel2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[25]">DMA1_Channel3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[26]">DMA1_Channel4_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[27]">DMA1_Channel5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[28]">DMA1_Channel6_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[29]">DMA1_Channel7_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[50]">DMA2_Channel1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[51]">DMA2_Channel2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[52]">DMA2_Channel3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[53]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5f]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[15]">DebugMon_Handler</a> from at32f4xx_it.o(i.DebugMon_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[0]">EP1_IN_Callback</a> from usb_endp.o(i.EP1_IN_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[1e]">EXTI0_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[40]">EXTI15_10_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1f]">EXTI1_IRQHandler</a> from at32f4xx_it.o(i.EXTI1_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[20]">EXTI2_IRQHandler</a> from at32f4xx_it.o(i.EXTI2_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[21]">EXTI3_IRQHandler</a> from at32f4xx_it.o(i.EXTI3_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[22]">EXTI4_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2f]">EXTI9_5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1c]">FLASH_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[10]">HardFault_Handler</a> from at32f4xx_it.o(i.HardFault_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[38]">I2C1_ER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[37]">I2C1_EV_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3a]">I2C2_ER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[39]">I2C2_EV_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[56]">I2C3_ER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[55]">I2C3_EV_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[11]">MemManage_Handler</a> from at32f4xx_it.o(i.MemManage_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[f]">NMI_Handler</a> from at32f4xx_it.o(i.NMI_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1]">NOP_Process</a> from usb_core.o(i.NOP_Process) referenced 40 times from usb_istr.o(.data)
 <LI><a href="#[19]">PVD_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[16]">PendSV_Handler</a> from at32f4xx_it.o(i.PendSV_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1d]">RCC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[41]">RTCAlarm_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1b]">RTC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[e]">Reset_Handler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[49]">SDIO1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[54]">SDIO2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3b]">SPI1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3c]">SPI2_I2S2EXT_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4b]">SPI3_I2S3EXT_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[57]">SPI4_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[14]">SVC_Handler</a> from at32f4xx_it.o(i.SVC_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[67]">Standard_GetConfiguration</a> from usb_core.o(i.Standard_GetConfiguration) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[68]">Standard_GetInterface</a> from usb_core.o(i.Standard_GetInterface) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[66]">Standard_GetStatus</a> from usb_core.o(i.Standard_GetStatus) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[17]">SysTick_Handler</a> from at32f4xx_it.o(i.SysTick_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[64]">SystemInit</a> from system_at32f4xx.o(i.SystemInit) referenced from startup_at32f403avgt7.o(.text)
 <LI><a href="#[1a]">TAMPER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[30]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[33]">TMR1_CC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[31]">TMR1_OV_TMR10_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[32]">TMR1_TRG_COM_TMR11_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[34]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[35]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[36]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4a]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4e]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4f]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[43]">TMR8_BRK_TMR12_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[46]">TMR8_CC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[44]">TMR8_OV_TMR13_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[45]">TMR8_TRG_COM_TMR14_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4c]">UART4_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4d]">UART5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[61]">UART7_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[62]">UART8_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3d]">USART1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3e]">USART2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3f]">USART3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[60]">USART6_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[42]">USBWakeUp_IRQHandler</a> from at32f4xx_it.o(i.USBWakeUp_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2b]">USB_HP_CAN1_TX_IRQHandler</a> from at32f4xx_it.o(i.USB_HP_CAN1_TX_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5d]">USB_HP_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2c]">USB_LP_CAN1_RX0_IRQHandler</a> from at32f4xx_it.o(i.USB_LP_CAN1_RX0_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5e]">USB_LP_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[13]">UsageFault_Handler</a> from at32f4xx_it.o(i.UsageFault_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[6]">UsbCamera_Data_Setup</a> from usb_prop.o(i.UsbCamera_Data_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[a]">UsbCamera_GetConfigDescriptor</a> from usb_prop.o(i.UsbCamera_GetConfigDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[9]">UsbCamera_GetDeviceDescriptor</a> from usb_prop.o(i.UsbCamera_GetDeviceDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[b]">UsbCamera_GetStringDescriptor</a> from usb_prop.o(i.UsbCamera_GetStringDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[8]">UsbCamera_Get_Interface_Setting</a> from usb_prop.o(i.UsbCamera_Get_Interface_Setting) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[7]">UsbCamera_NoData_Setup</a> from usb_prop.o(i.UsbCamera_NoData_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[3]">UsbCamera_Reset</a> from usb_prop.o(i.UsbCamera_Reset) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[c]">UsbCamera_SetConfiguration</a> from usb_prop.o(i.UsbCamera_SetConfiguration) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[d]">UsbCamera_SetDeviceAddress</a> from usb_prop.o(i.UsbCamera_SetDeviceAddress) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[4]">UsbCamera_Status_In</a> from usb_prop.o(i.UsbCamera_Status_In) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[5]">UsbCamera_Status_Out</a> from usb_prop.o(i.UsbCamera_Status_Out) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[2]">UsbCamera_init</a> from usb_prop.o(i.UsbCamera_init) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[6a]">VideoCommitControl_Command</a> from usb_prop.o(i.VideoCommitControl_Command) referenced from usb_prop.o(i.UsbCamera_Data_Setup)
 <LI><a href="#[69]">VideoProbeControl_Command</a> from usb_prop.o(i.VideoProbeControl_Command) referenced from usb_prop.o(i.UsbCamera_Data_Setup)
 <LI><a href="#[18]">WWDG_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[48]">XMC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[65]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f403avgt7.o(.text)
 <LI><a href="#[63]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[65]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[6b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[d6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[d7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[d8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[d9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[e]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI2_I2S2EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SPI3_I2S3EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TMR1_OV_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TMR1_TRG_COM_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TMR8_BRK_TMR12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TMR8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TMR8_OV_TMR13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TMR8_TRG_COM_TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>XMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[da]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>ACC_ClearFlag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>ACC_EnterCALMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_EnterCALMode))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[6e]"></a>ACC_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>

<P><STRONG><a name="[5c]"></a>ACC_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f4xx_it.o(i.ACC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ACC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_GetFlagStatus
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>ACC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[b1]"></a>ACC_WriteC1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_WriteC1))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[b2]"></a>ACC_WriteC2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_WriteC2))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[b3]"></a>ACC_WriteC3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_WriteC3))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[70]"></a>AT32_BUTTON_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, at32_board.o(i.AT32_BUTTON_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AT32_BUTTON_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[74]"></a>AT32_Board_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32_board.o(i.AT32_Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AT32_Board_Init &rArr; AT32_LEDn_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_OFF
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>AT32_LEDn_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, at32_board.o(i.AT32_LEDn_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AT32_LEDn_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[77]"></a>AT32_LEDn_OFF</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32_board.o(i.AT32_LEDn_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[d3]"></a>AT32_LEDn_Toggle</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, at32_board.o(i.AT32_LEDn_Toggle))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>AT32_USB_GPIO_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32_board.o(i.AT32_USB_GPIO_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT32_USB_GPIO_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>ByteSwap</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_regs.o(i.ByteSwap))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[bf]"></a>CTR_HP</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, usb_int.o(i.CTR_HP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CTR_HP
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HP_CAN1_TX_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>CTR_LP</STRONG> (Thumb, 616 bytes, Stack size 8 bytes, usb_int.o(i.CTR_LP))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[b8]"></a>ClearDTOG_RX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_RX))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[b6]"></a>ClearDTOG_TX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_TX))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[c9]"></a>Clear_Status_Out</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(i.Clear_Status_Out))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[15]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>Delay_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, at32_board.o(i.Delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Delay_init &rArr; SysTick_CLKSourceConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[9b]"></a>Delay_ms</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, at32_board.o(i.Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>Delay_us</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, at32_board.o(i.Delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Stop
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Byte
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_No_Ack
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Reg
</UL>

<P><STRONG><a name="[0]"></a>EP1_IN_Callback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usb_endp.o(i.EP1_IN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EP1_IN_Callback &rArr; UVC_SendPack_Irq &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UVC_SendPack_Irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>EXTI1_Config</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(i.EXTI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EXTI1_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, at32f4xx_it.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI1_IRQHandler &rArr; EXTI_ClearIntPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>EXTI2_Config</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(i.EXTI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EXTI2_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, at32f4xx_it.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI2_IRQHandler &rArr; EXTI_ClearIntPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>EXTI3_Config</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(i.EXTI3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EXTI3_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, at32f4xx_it.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI3_IRQHandler &rArr; EXTI_ClearIntPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>EXTI_ClearIntPendingBit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, at32f4xx_exti.o(i.EXTI_ClearIntPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_ClearIntPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBWakeUp_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[8a]"></a>EXTI_Init</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, at32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_Config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_Config
</UL>

<P><STRONG><a name="[d1]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_exti.o(i.EXTI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, at32f4xx_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_Config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_Config
</UL>

<P><STRONG><a name="[73]"></a>GPIO_Init</STRONG> (Thumb, 366 bytes, Stack size 40 bytes, at32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_Config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_Config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
</UL>

<P><STRONG><a name="[79]"></a>GPIO_ResetBits</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, at32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ResetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
</UL>

<P><STRONG><a name="[90]"></a>GPIO_SetBits</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, at32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
</UL>

<P><STRONG><a name="[72]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
</UL>

<P><STRONG><a name="[83]"></a>GetEPRxAddr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>

<P><STRONG><a name="[7f]"></a>GetEPTxAddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPTxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[cf]"></a>Get_SerialNum</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, hw_config.o(i.Get_SerialNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_SerialNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_init
</UL>

<P><STRONG><a name="[10]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>In0_Process</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, usb_core.o(i.In0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = In0_Process &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[11]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NOP_Process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_core.o(i.NOP_Process))
<BR>[Address Reference Count : 2]<UL><LI> usb_istr.o(.data)
<LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[8b]"></a>NVIC_Init</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_Config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_Config
</UL>

<P><STRONG><a name="[93]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_PriorityGroupConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>OV2640_Init</STRONG> (Thumb, 370 bytes, Stack size 16 bytes, ov2640.o(i.OV2640_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OV2640_Init &rArr; OV2640_OutSize_Set &rArr; SCCB_WR_Reg &rArr; SCCB_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Reg
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov2640_speed_ctrl
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_OutSize_Set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_JPEG_Mode
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>OV2640_JPEG_Mode</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ov2640.o(i.OV2640_JPEG_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OV2640_JPEG_Mode &rArr; SCCB_WR_Reg &rArr; SCCB_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
</UL>

<P><STRONG><a name="[a0]"></a>OV2640_OutSize_Set</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, ov2640.o(i.OV2640_OutSize_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OV2640_OutSize_Set &rArr; SCCB_WR_Reg &rArr; SCCB_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
</UL>

<P><STRONG><a name="[7d]"></a>Out0_Process</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usb_core.o(i.Out0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Out0_Process &rArr; DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[84]"></a>PMAToUserBufferCopy</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, usb_mem.o(i.PMAToUserBufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PMAToUserBufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>

<P><STRONG><a name="[16]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>Post0_Process</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usb_core.o(i.Post0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Post0_Process &rArr; SetEPRxCount
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[d0]"></a>PowerOn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, usb_pwr.o(i.PowerOn))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_init
</UL>

<P><STRONG><a name="[a3]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB1PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[71]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB2PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_Config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_Config
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
</UL>

<P><STRONG><a name="[be]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 300 bytes, Stack size 20 bytes, at32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[a4]"></a>RCC_HSI2USB48M</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, at32f4xx_rcc.o(i.RCC_HSI2USB48M))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_HSI2USB48M
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[a5]"></a>RCC_StepModeCmd</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, at32f4xx_rcc.o(i.RCC_StepModeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo192M
</UL>

<P><STRONG><a name="[a6]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_USBCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_USBCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[9c]"></a>SCCB_Init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, sccb.o(i.SCCB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SCCB_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
</UL>

<P><STRONG><a name="[a7]"></a>SCCB_No_Ack</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, sccb.o(i.SCCB_No_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCCB_No_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Reg
</UL>

<P><STRONG><a name="[a9]"></a>SCCB_RD_Byte</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, sccb.o(i.SCCB_RD_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCCB_RD_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Reg
</UL>

<P><STRONG><a name="[9e]"></a>SCCB_RD_Reg</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, sccb.o(i.SCCB_RD_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCCB_RD_Reg &rArr; SCCB_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Stop
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Byte
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_No_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
</UL>

<P><STRONG><a name="[aa]"></a>SCCB_Start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sccb.o(i.SCCB_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCCB_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Reg
</UL>

<P><STRONG><a name="[ac]"></a>SCCB_Stop</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sccb.o(i.SCCB_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCCB_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Reg
</UL>

<P><STRONG><a name="[ab]"></a>SCCB_WR_Byte</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, sccb.o(i.SCCB_WR_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCCB_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_RD_Reg
</UL>

<P><STRONG><a name="[9d]"></a>SCCB_WR_Reg</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sccb.o(i.SCCB_WR_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCCB_WR_Reg &rArr; SCCB_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Stop
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov2640_speed_ctrl
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_OutSize_Set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_JPEG_Mode
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
</UL>

<P><STRONG><a name="[14]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>SetDeviceAddress</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, usb_core.o(i.SetDeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[c3]"></a>SetEPDblBuf0Count</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuf0Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuf0Count
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UVC_SendPack_Irq
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[c4]"></a>SetEPDblBuf1Count</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuf1Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuf1Count
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UVC_SendPack_Irq
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[cc]"></a>SetEPDblBuffAddr</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuffAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuffAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[cd]"></a>SetEPDblBuffCount</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuffCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuffCount
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[cb]"></a>SetEPDoubleBuff</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPDoubleBuff))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[c7]"></a>SetEPRxAddr</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[a2]"></a>SetEPRxCount</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
</UL>

<P><STRONG><a name="[ce]"></a>SetEPRxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPRxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPRxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[ca]"></a>SetEPRxValid</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxValid
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[c8]"></a>SetEPTxAddr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPTxAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[81]"></a>SetEPTxCount</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxCount))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[b7]"></a>SetEPTxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPTxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[c6]"></a>SetEPType</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPType))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPType
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_Reset
</UL>

<P><STRONG><a name="[af]"></a>Set_USBClock</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, hw_config.o(i.Set_USBClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Set_USBClock &rArr; RCC_USBCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_USBCLKConfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI2USB48M
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_WriteC3
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_WriteC2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_WriteC1
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ITConfig
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_EnterCALMode
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>Setup0_Process</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, usb_core.o(i.Setup0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSwap
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[97]"></a>Standard_ClearFeature</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, usb_core.o(i.Standard_ClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[67]"></a>Standard_GetConfiguration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetConfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[c5]"></a>Standard_GetDescriptorData</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetDescriptorData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetDescriptorData
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_GetStringDescriptor
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_GetDeviceDescriptor
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbCamera_GetConfigDescriptor
</UL>

<P><STRONG><a name="[68]"></a>Standard_GetInterface</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[66]"></a>Standard_GetStatus</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[95]"></a>Standard_SetConfiguration</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[96]"></a>Standard_SetDeviceFeature</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetDeviceFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetDeviceFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[99]"></a>Standard_SetEndPointFeature</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, usb_core.o(i.Standard_SetEndPointFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Standard_SetEndPointFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[98]"></a>Standard_SetInterface</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[86]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_CLKSourceConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>

<P><STRONG><a name="[17]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SystemInit</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, system_at32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo192M &rArr; RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>UART_Print_Init</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, at32_board.o(i.UART_Print_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UART_Print_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>USART_Cmd</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, at32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[bc]"></a>USART_INTConfig</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, at32f4xx_usart.o(i.USART_INTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART_INTConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[bb]"></a>USART_Init</STRONG> (Thumb, 450 bytes, Stack size 56 bytes, at32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[ba]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_usart.o(i.USART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
</UL>

<P><STRONG><a name="[42]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at32f4xx_it.o(i.USBWakeUp_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBWakeUp_IRQHandler &rArr; EXTI_ClearIntPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at32f4xx_it.o(i.USB_HP_CAN1_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HP_CAN1_TX_IRQHandler &rArr; CTR_HP
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_HP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>USB_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usb_init.o(i.USB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c0]"></a>USB_Interrupts_Config</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, hw_config.o(i.USB_Interrupts_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>USB_Istr</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, usb_istr.o(i.USB_Istr))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[2c]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at32f4xx_it.o(i.USB_LP_CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>UVC_SendPack_Irq</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, uvcstream.o(i.UVC_SendPack_Irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UVC_SendPack_Irq &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bufCopy
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf1Count
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf0Count
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[13]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsbCamera_Data_Setup</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, usb_prop.o(i.UsbCamera_Data_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UsbCamera_Data_Setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>UsbCamera_GetConfigDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(i.UsbCamera_GetConfigDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UsbCamera_GetConfigDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>UsbCamera_GetDeviceDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(i.UsbCamera_GetDeviceDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UsbCamera_GetDeviceDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>UsbCamera_GetStringDescriptor</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usb_prop.o(i.UsbCamera_GetStringDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UsbCamera_GetStringDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>UsbCamera_Get_Interface_Setting</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_prop.o(i.UsbCamera_Get_Interface_Setting))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>UsbCamera_NoData_Setup</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_prop.o(i.UsbCamera_NoData_Setup))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>UsbCamera_Reset</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, usb_prop.o(i.UsbCamera_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UsbCamera_Reset &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPType
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxAddr
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxAddr
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDoubleBuff
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuffCount
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuffAddr
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf1Count
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf0Count
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Status_Out
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>UsbCamera_SetConfiguration</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb_prop.o(i.UsbCamera_SetConfiguration))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>UsbCamera_SetDeviceAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_prop.o(i.UsbCamera_SetDeviceAddress))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>UsbCamera_Status_In</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.UsbCamera_Status_In))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>UsbCamera_Status_Out</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.UsbCamera_Status_Out))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>UsbCamera_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_prop.o(i.UsbCamera_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UsbCamera_init &rArr; Get_SerialNum
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>UserToPMABufferCopy</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, usb_mem.o(i.UserToPMABufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UserToPMABufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UVC_SendPack_Irq
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[6a]"></a>VideoCommitControl_Command</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_prop.o(i.VideoCommitControl_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.UsbCamera_Data_Setup)
</UL>
<P><STRONG><a name="[69]"></a>VideoProbeControl_Command</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_prop.o(i.VideoProbeControl_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.UsbCamera_Data_Setup)
</UL>
<P><STRONG><a name="[dd]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[de]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[df]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8f]"></a>assert_failed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.assert_failed))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_USBCLKConfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI2USB48M
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[c2]"></a>bufCopy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uvcstream.o(i.bufCopy))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UVC_SendPack_Irq
</UL>

<P><STRONG><a name="[63]"></a>main</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = main &rArr; UART_Print_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Print_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Toggle
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_Config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_Config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a1]"></a>ov2640_speed_ctrl</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ov2640.o(i.ov2640_speed_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ov2640_speed_ctrl &rArr; SCCB_WR_Reg &rArr; SCCB_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_WR_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV2640_Init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ad]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_at32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetSysClock &rArr; SetSysClockTo192M &rArr; RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo192M
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[ae]"></a>SetSysClockTo192M</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, system_at32f4xx.o(i.SetSysClockTo192M))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSysClockTo192M &rArr; RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[7e]"></a>DataStageIn</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, usb_core.o(i.DataStageIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>

<P><STRONG><a name="[82]"></a>DataStageOut</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, usb_core.o(i.DataStageOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
</UL>

<P><STRONG><a name="[85]"></a>Data_Setup0</STRONG> (Thumb, 628 bytes, Stack size 40 bytes, usb_core.o(i.Data_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[94]"></a>NoData_Setup0</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, usb_core.o(i.NoData_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NoData_Setup0 &rArr; Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetInterface
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetEndPointFeature
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetDeviceFeature
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetConfiguration
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>

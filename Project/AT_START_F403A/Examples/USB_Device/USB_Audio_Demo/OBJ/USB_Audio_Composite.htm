<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\USB_Audio_Composite.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\USB_Audio_Composite.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Oct 24 14:20:03 2020
<BR><P>
<H3>Maximum Stack Usage =        140 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Audio_Init &rArr; WM8988_Init &rArr; AT32_I2S_Init &rArr; I2S_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[86]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">SysTick_Handler</a><BR>
 <LI><a href="#[2f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[61]">ACC_IRQHandler</a> from at32f4xx_it.o(i.ACC_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2f]">ADC1_2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4c]">ADC3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[17]">BusFault_Handler</a> from at32f4xx_it.o(i.BusFault_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[32]">CAN1_RX1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[33]">CAN1_SCE_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5e]">CAN2_RX0_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5f]">CAN2_RX1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[60]">CAN2_SCE_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5d]">CAN2_TX_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[28]">DMA1_Channel1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[29]">DMA1_Channel2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2a]">DMA1_Channel3_IRQHandler</a> from wm8988_i2s.o(i.DMA1_Channel3_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2b]">DMA1_Channel4_IRQHandler</a> from wm8988_i2s.o(i.DMA1_Channel4_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2c]">DMA1_Channel5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2d]">DMA1_Channel6_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2e]">DMA1_Channel7_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[55]">DMA2_Channel1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[56]">DMA2_Channel2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[57]">DMA2_Channel3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[58]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[64]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1a]">DebugMon_Handler</a> from at32f4xx_it.o(i.DebugMon_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[2]">EP1_IN_Callback</a> from usb_endp.o(i.EP1_IN_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[5]">EP2_OUT_Callback</a> from usb_endp.o(i.EP2_OUT_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[4]">EP3_IN_Callback</a> from usb_endp.o(i.EP3_IN_Callback) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[23]">EXTI0_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[45]">EXTI15_10_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[24]">EXTI1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[25]">EXTI2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[26]">EXTI3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[27]">EXTI4_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[34]">EXTI9_5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[21]">FLASH_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[73]">Get_CurVolume_Command</a> from usb_prop.o(i.Get_CurVolume_Command) referenced from usb_prop.o(i.USB_Audio_Data_Setup)
 <LI><a href="#[71]">Get_MaxVolume_Command</a> from usb_prop.o(i.Get_MaxVolume_Command) referenced from usb_prop.o(i.USB_Audio_Data_Setup)
 <LI><a href="#[70]">Get_MinVolume_Command</a> from usb_prop.o(i.Get_MinVolume_Command) referenced from usb_prop.o(i.USB_Audio_Data_Setup)
 <LI><a href="#[72]">Get_ResVolume_Command</a> from usb_prop.o(i.Get_ResVolume_Command) referenced from usb_prop.o(i.USB_Audio_Data_Setup)
 <LI><a href="#[15]">HardFault_Handler</a> from at32f4xx_it.o(i.HardFault_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3d]">I2C1_ER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3c]">I2C1_EV_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3f]">I2C2_ER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3e]">I2C2_EV_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5b]">I2C3_ER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5a]">I2C3_EV_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[16]">MemManage_Handler</a> from at32f4xx_it.o(i.MemManage_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[6d]">Mute_Command</a> from usb_prop.o(i.Mute_Command) referenced from usb_prop.o(i.USB_Audio_Data_Setup)
 <LI><a href="#[14]">NMI_Handler</a> from at32f4xx_it.o(i.NMI_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3]">NOP_Process</a> from usb_core.o(i.NOP_Process) referenced 34 times from usb_istr.o(.data)
 <LI><a href="#[1e]">PVD_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1b]">PendSV_Handler</a> from at32f4xx_it.o(i.PendSV_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[22]">RCC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[46]">RTCAlarm_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[20]">RTC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[13]">Reset_Handler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4e]">SDIO1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[59]">SDIO2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[40]">SPI1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[41]">SPI2_I2S2EXT_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[50]">SPI3_I2S3EXT_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[5c]">SPI4_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[19]">SVC_Handler</a> from at32f4xx_it.o(i.SVC_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[6f]">Set_Freq_Command</a> from usb_prop.o(i.Set_Freq_Command) referenced from usb_prop.o(i.USB_Audio_Data_Setup)
 <LI><a href="#[6e]">Set_Volume_Command</a> from usb_prop.o(i.Set_Volume_Command) referenced from usb_prop.o(i.USB_Audio_Data_Setup)
 <LI><a href="#[6b]">Standard_GetConfiguration</a> from usb_core.o(i.Standard_GetConfiguration) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[6c]">Standard_GetInterface</a> from usb_core.o(i.Standard_GetInterface) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[6a]">Standard_GetStatus</a> from usb_core.o(i.Standard_GetStatus) referenced from usb_core.o(i.Data_Setup0)
 <LI><a href="#[1c]">SysTick_Handler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[68]">SystemInit</a> from system_at32f4xx.o(i.SystemInit) referenced from startup_at32f403avgt7.o(.text)
 <LI><a href="#[1f]">TAMPER_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[35]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[38]">TMR1_CC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[36]">TMR1_OV_TMR10_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[37]">TMR1_TRG_COM_TMR11_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[39]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3a]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[3b]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4f]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[53]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[54]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[48]">TMR8_BRK_TMR12_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4b]">TMR8_CC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[49]">TMR8_OV_TMR13_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4a]">TMR8_TRG_COM_TMR14_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[51]">UART4_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[52]">UART5_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[66]">UART7_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[67]">UART8_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[42]">USART1_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[43]">USART2_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[44]">USART3_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[65]">USART6_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[47]">USBWakeUp_IRQHandler</a> from at32f4xx_it.o(i.USBWakeUp_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[a]">USB_Audio_Data_Setup</a> from usb_prop.o(i.USB_Audio_Data_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[e]">USB_Audio_GetConfigDescriptor</a> from usb_prop.o(i.USB_Audio_GetConfigDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[d]">USB_Audio_GetDeviceDescriptor</a> from usb_prop.o(i.USB_Audio_GetDeviceDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[f]">USB_Audio_GetStringDescriptor</a> from usb_prop.o(i.USB_Audio_GetStringDescriptor) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[c]">USB_Audio_Get_Interface_Setting</a> from usb_prop.o(i.USB_Audio_Get_Interface_Setting) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[b]">USB_Audio_NoData_Setup</a> from usb_prop.o(i.USB_Audio_NoData_Setup) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[7]">USB_Audio_Reset</a> from usb_prop.o(i.USB_Audio_Reset) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[10]">USB_Audio_SetConfiguration</a> from usb_prop.o(i.USB_Audio_SetConfiguration) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[12]">USB_Audio_SetDeviceAddress</a> from usb_prop.o(i.USB_Audio_SetDeviceAddress) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[11]">USB_Audio_SetInterface</a> from usb_prop.o(i.USB_Audio_SetInterface) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[8]">USB_Audio_Status_In</a> from usb_prop.o(i.USB_Audio_Status_In) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[9]">USB_Audio_Status_Out</a> from usb_prop.o(i.USB_Audio_Status_Out) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[6]">USB_Audio_init</a> from usb_prop.o(i.USB_Audio_init) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[30]">USB_HP_CAN1_TX_IRQHandler</a> from at32f4xx_it.o(i.USB_HP_CAN1_TX_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[62]">USB_HP_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[31]">USB_LP_CAN1_RX0_IRQHandler</a> from at32f4xx_it.o(i.USB_LP_CAN1_RX0_IRQHandler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[63]">USB_LP_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[18]">UsageFault_Handler</a> from at32f4xx_it.o(i.UsageFault_Handler) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[1d]">WWDG_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[4d]">XMC_IRQHandler</a> from startup_at32f403avgt7.o(.text) referenced from startup_at32f403avgt7.o(RESET)
 <LI><a href="#[74]">__main</a> from __main.o(!!!main) referenced from startup_at32f403avgt7.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[74]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[75]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[77]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[119]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[11a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[11b]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[11c]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[11d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[7d]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[78]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[11e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[11f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[120]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[121]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[122]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[123]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[124]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[125]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[126]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[127]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[128]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[129]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[12a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[12b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[12c]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[12d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[12e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[12f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[130]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[131]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[82]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[132]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[133]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[134]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[135]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[136]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[137]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[138]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[76]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[139]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[7a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[7c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[13a]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[7e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Audio_Init &rArr; WM8988_Init &rArr; AT32_I2S_Init &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[13b]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[87]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[81]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[13c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[83]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[13]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI2_I2S2EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPI3_I2S3EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR1_OV_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TMR1_TRG_COM_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TMR8_BRK_TMR12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TMR8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TMR8_OV_TMR13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TMR8_TRG_COM_TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>XMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403avgt7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_at32f403avgt7.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[13d]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[80]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[140]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[141]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[142]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>ACC_ClearFlag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>

<P><STRONG><a name="[f1]"></a>ACC_EnterCALMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_EnterCALMode))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[88]"></a>ACC_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>ACC_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f4xx_it.o(i.ACC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ACC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_GetFlagStatus
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[ed]"></a>ACC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[ee]"></a>ACC_WriteC1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_WriteC1))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[ef]"></a>ACC_WriteC2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_WriteC2))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[f0]"></a>ACC_WriteC3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_acc.o(i.ACC_WriteC3))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[8a]"></a>AT32_BUTTON_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, at32_board.o(i.AT32_BUTTON_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AT32_BUTTON_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[8e]"></a>AT32_Board_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32_board.o(i.AT32_Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT32_Board_Init &rArr; AT32_LEDn_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_OFF
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>AT32_I2C_Init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, wm8988_i2c.o(i.AT32_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = AT32_I2C_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinsRemapConfig
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Init
</UL>

<P><STRONG><a name="[9a]"></a>AT32_I2C_WriteReg</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, wm8988_i2c.o(i.AT32_I2C_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT32_I2C_WriteReg &rArr; AT32_I2C_Timeout &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Poll
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Set_Freq
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Init
</UL>

<P><STRONG><a name="[111]"></a>AT32_I2S1_GetMicrophoneBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm8988_i2s.o(i.AT32_I2S1_GetMicrophoneBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_GetMicrophoneBuffer
</UL>

<P><STRONG><a name="[112]"></a>AT32_I2S1_GetMicrophoneFrameLen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm8988_i2s.o(i.AT32_I2S1_GetMicrophoneFrameLen))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_GetMicrophoneFrameLen
</UL>

<P><STRONG><a name="[b6]"></a>AT32_I2S1_GetNbyteDataSend</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm8988_i2s.o(i.AT32_I2S1_GetNbyteDataSend))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_GetSpeakerFeedback
</UL>

<P><STRONG><a name="[114]"></a>AT32_I2S1_WriteDataToSpkFifoBuffer</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, wm8988_i2s.o(i.AT32_I2S1_WriteDataToSpkFifoBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AT32_I2S1_WriteDataToSpkFifoBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_WriteSpeakerBuffer
</UL>

<P><STRONG><a name="[a1]"></a>AT32_I2S_Init</STRONG> (Thumb, 686 bytes, Stack size 24 bytes, wm8988_i2s.o(i.AT32_I2S_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = AT32_I2S_Init &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_INTConfig
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Reset
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMAEnable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Enable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_DefaultInit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Init
</UL>

<P><STRONG><a name="[90]"></a>AT32_LEDn_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, at32_board.o(i.AT32_LEDn_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AT32_LEDn_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[91]"></a>AT32_LEDn_OFF</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32_board.o(i.AT32_LEDn_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[115]"></a>AT32_LEDn_Toggle</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, at32_board.o(i.AT32_LEDn_Toggle))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>AT32_SetI2S_FREQ</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, wm8988_i2s.o(i.AT32_SetI2S_FREQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AT32_SetI2S_FREQ &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_INTConfig
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Reset
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMAEnable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Set_Freq
</UL>

<P><STRONG><a name="[af]"></a>AT32_USB_GPIO_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32_board.o(i.AT32_USB_GPIO_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AT32_USB_GPIO_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>Audio_GetMicrophoneBuffer</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at32_audio_conf.o(i.Audio_GetMicrophoneBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Audio_GetMicrophoneBuffer &rArr; WM8988_GetMicrophoneBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_GetMicrophoneBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[b3]"></a>Audio_GetMicrophoneLen</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at32_audio_conf.o(i.Audio_GetMicrophoneLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Audio_GetMicrophoneLen &rArr; WM8988_GetMicrophoneFrameLen
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_GetMicrophoneFrameLen
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[b5]"></a>Audio_GetSpeakerFeedback</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, at32_audio_conf.o(i.Audio_GetSpeakerFeedback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Audio_GetSpeakerFeedback
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S1_GetNbyteDataSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_IN_Callback
</UL>

<P><STRONG><a name="[b7]"></a>Audio_Init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, at32_audio_conf.o(i.Audio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Audio_Init &rArr; WM8988_Init &rArr; AT32_I2S_Init &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>Audio_SetFreq</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, at32_audio_conf.o(i.Audio_SetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Audio_SetFreq &rArr; WM8988_Set_Freq &rArr; AT32_SetI2S_FREQ &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Set_Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Status_In
</UL>

<P><STRONG><a name="[bb]"></a>Audio_SetMute_Microphone</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at32_audio_conf.o(i.Audio_SetMute_Microphone))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Audio_SetMute_Microphone
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_SetADCMic_Mute
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Status_In
</UL>

<P><STRONG><a name="[bd]"></a>Audio_SetMute_Speaker</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at32_audio_conf.o(i.Audio_SetMute_Speaker))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Audio_SetMute_Speaker
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_SetDACSpk_Mute
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Status_In
</UL>

<P><STRONG><a name="[bf]"></a>Audio_SetVolume_Microphone</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at32_audio_conf.o(i.Audio_SetVolume_Microphone))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Audio_SetVolume_Microphone
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_SetADCMic_Volume
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Status_In
</UL>

<P><STRONG><a name="[c1]"></a>Audio_SetVolume_Speaker</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at32_audio_conf.o(i.Audio_SetVolume_Speaker))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Audio_SetVolume_Speaker
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_SetDACSpk_Volume
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Status_In
</UL>

<P><STRONG><a name="[c3]"></a>Audio_WriteDataToSpeakerBuffer</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, at32_audio_conf.o(i.Audio_WriteDataToSpeakerBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Audio_WriteDataToSpeakerBuffer &rArr; WM8988_WriteSpeakerBuffer &rArr; AT32_I2S1_WriteDataToSpkFifoBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_WriteSpeakerBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
</UL>

<P><STRONG><a name="[17]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[f3]"></a>ByteSwap</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_regs.o(i.ByteSwap))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[105]"></a>CTR_HP</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, usb_int.o(i.CTR_HP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CTR_HP
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HP_CAN1_TX_IRQHandler
</UL>

<P><STRONG><a name="[c5]"></a>CTR_LP</STRONG> (Thumb, 616 bytes, Stack size 8 bytes, usb_int.o(i.CTR_LP))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[f6]"></a>ClearDTOG_RX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_RX))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[f4]"></a>ClearDTOG_TX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_TX))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[fc]"></a>Clear_Status_Out</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(i.Clear_Status_Out))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[2a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, wm8988_i2s.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, wm8988_i2s.o(i.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>DMA_ChannelEnable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_dma.o(i.DMA_ChannelEnable))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[ca]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>DMA_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at32f4xx_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>DMA_INTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_dma.o(i.DMA_INTConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[a9]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, at32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[a8]"></a>DMA_Reset</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, at32f4xx_dma.o(i.DMA_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[1a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>Delay_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, at32_board.o(i.Delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
</UL>

<P><STRONG><a name="[118]"></a>Delay_ms</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, at32_board.o(i.Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>EP1_IN_Callback</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, usb_endp.o(i.EP1_IN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EP1_IN_Callback &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetENDPOINT
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeUserBuffer
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_GetMicrophoneLen
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_GetMicrophoneBuffer
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf1Count
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf0Count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>EP2_OUT_Callback</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, usb_endp.o(i.EP2_OUT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EP2_OUT_Callback &rArr; Audio_WriteDataToSpeakerBuffer &rArr; WM8988_WriteSpeakerBuffer &rArr; AT32_I2S1_WriteDataToSpkFifoBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPDblBuf1Count
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPDblBuf0Count
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetENDPOINT
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeUserBuffer
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_WriteDataToSpeakerBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>EP3_IN_Callback</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usb_endp.o(i.EP3_IN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EP3_IN_Callback &rArr; Audio_GetSpeakerFeedback
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetENDPOINT
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeUserBuffer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_GetSpeakerFeedback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf1Count
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf0Count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[f7]"></a>EXTI_ClearIntPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f4xx_exti.o(i.EXTI_ClearIntPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBWakeUp_IRQHandler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[107]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, at32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[d7]"></a>FreeUserBuffer</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usb_regs.o(i.FreeUserBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FreeUserBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_IN_Callback
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[8d]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, at32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>

<P><STRONG><a name="[93]"></a>GPIO_PinsRemapConfig</STRONG> (Thumb, 1388 bytes, Stack size 20 bytes, at32f4xx_gpio.o(i.GPIO_PinsRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinsRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>

<P><STRONG><a name="[b0]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
</UL>

<P><STRONG><a name="[8c]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f4xx_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[d4]"></a>GetENDPOINT</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_regs.o(i.GetENDPOINT))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_IN_Callback
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[d8]"></a>GetEPDblBuf0Count</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPDblBuf0Count))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
</UL>

<P><STRONG><a name="[d9]"></a>GetEPDblBuf1Count</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPDblBuf1Count))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
</UL>

<P><STRONG><a name="[d0]"></a>GetEPRxAddr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>

<P><STRONG><a name="[cc]"></a>GetEPTxAddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPTxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[73]"></a>Get_CurVolume_Command</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usb_prop.o(i.Get_CurVolume_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.USB_Audio_Data_Setup)
</UL>
<P><STRONG><a name="[71]"></a>Get_MaxVolume_Command</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usb_prop.o(i.Get_MaxVolume_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.USB_Audio_Data_Setup)
</UL>
<P><STRONG><a name="[70]"></a>Get_MinVolume_Command</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usb_prop.o(i.Get_MinVolume_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.USB_Audio_Data_Setup)
</UL>
<P><STRONG><a name="[72]"></a>Get_ResVolume_Command</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usb_prop.o(i.Get_ResVolume_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.USB_Audio_Data_Setup)
</UL>
<P><STRONG><a name="[da]"></a>Get_SerialNum</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hw_config.o(i.Get_SerialNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_init
</UL>

<P><STRONG><a name="[15]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>I2C_CheckEvent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, at32f4xx_i2c.o(i.I2C_CheckEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Timeout
</UL>

<P><STRONG><a name="[97]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>

<P><STRONG><a name="[95]"></a>I2C_DeInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at32f4xx_i2c.o(i.I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>

<P><STRONG><a name="[9d]"></a>I2C_GenerateSTART</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>

<P><STRONG><a name="[a0]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>

<P><STRONG><a name="[9c]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, at32f4xx_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>

<P><STRONG><a name="[96]"></a>I2C_Init</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, at32f4xx_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>

<P><STRONG><a name="[9e]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>

<P><STRONG><a name="[9f]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>

<P><STRONG><a name="[a3]"></a>I2S_DefaultInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_spi.o(i.I2S_DefaultInit))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[a6]"></a>I2S_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_spi.o(i.I2S_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[a4]"></a>I2S_Init</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, at32f4xx_spi.o(i.I2S_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[c6]"></a>In0_Process</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, usb_core.o(i.In0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = In0_Process &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[16]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>Mute_Command</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usb_prop.o(i.Mute_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.USB_Audio_Data_Setup)
</UL>
<P><STRONG><a name="[14]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NOP_Process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_core.o(i.NOP_Process))
<BR>[Address Reference Count : 2]<UL><LI> usb_prop.o(.data)
<LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[ad]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[ac]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[c8]"></a>Out0_Process</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usb_core.o(i.Out0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Out0_Process &rArr; DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[d1]"></a>PMAToUserBufferCopy</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, usb_mem.o(i.PMAToUserBufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PMAToUserBufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP2_OUT_Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>

<P><STRONG><a name="[1b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[df]"></a>Post0_Process</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usb_core.o(i.Post0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Post0_Process &rArr; SetEPRxCount
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[103]"></a>PowerOn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, usb_pwr.o(i.PowerOn))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_init
</UL>

<P><STRONG><a name="[a7]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[94]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>

<P><STRONG><a name="[dc]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Reset
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
</UL>

<P><STRONG><a name="[8b]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_BUTTON_Init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>

<P><STRONG><a name="[e7]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Reset
</UL>

<P><STRONG><a name="[dd]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 300 bytes, Stack size 20 bytes, at32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[f2]"></a>RCC_HSI2USB48M</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_HSI2USB48M))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[ea]"></a>RCC_StepModeCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_StepModeCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo192M
</UL>

<P><STRONG><a name="[ec]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_rcc.o(i.RCC_USBCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[a5]"></a>SPI_I2S_DMAEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_spi.o(i.SPI_I2S_DMAEnable))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[a2]"></a>SPI_I2S_Reset</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, at32f4xx_spi.o(i.SPI_I2S_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
</UL>

<P><STRONG><a name="[19]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[de]"></a>SetDeviceAddress</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, usb_core.o(i.SetDeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[d5]"></a>SetEPDblBuf0Count</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuf0Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuf0Count
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_SetConfiguration
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_IN_Callback
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[d6]"></a>SetEPDblBuf1Count</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuf1Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuf1Count
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_SetConfiguration
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_IN_Callback
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
</UL>

<P><STRONG><a name="[fe]"></a>SetEPDblBuffAddr</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuffAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuffAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[ff]"></a>SetEPDblBuffCount</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPDblBuffCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPDblBuffCount
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[fa]"></a>SetEPRxAddr</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[e6]"></a>SetEPRxCount</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
</UL>

<P><STRONG><a name="[101]"></a>SetEPRxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPRxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPRxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[fd]"></a>SetEPRxValid</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxValid
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[fb]"></a>SetEPTxAddr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPTxAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[ce]"></a>SetEPTxCount</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxCount))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[f5]"></a>SetEPTxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(i.SetEPTxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_SetConfiguration
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[f9]"></a>SetEPType</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPType))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPType
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[6f]"></a>Set_Freq_Command</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_prop.o(i.Set_Freq_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.USB_Audio_Data_Setup)
</UL>
<P><STRONG><a name="[116]"></a>Set_USB768ByteMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_regs.o(i.Set_USB768ByteMode))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>Set_USBClock</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, hw_config.o(i.Set_USBClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_USBClock
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_USBCLKConfig
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI2USB48M
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_WriteC3
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_WriteC2
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_WriteC1
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_ITConfig
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_EnterCALMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>Set_Volume_Command</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usb_prop.o(i.Set_Volume_Command))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.USB_Audio_Data_Setup)
</UL>
<P><STRONG><a name="[c7]"></a>Setup0_Process</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, usb_core.o(i.Setup0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSwap
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[e3]"></a>Standard_ClearFeature</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, usb_core.o(i.Standard_ClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[6b]"></a>Standard_GetConfiguration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetConfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[f8]"></a>Standard_GetDescriptorData</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetDescriptorData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetDescriptorData
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_GetStringDescriptor
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_GetDeviceDescriptor
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_GetConfigDescriptor
</UL>

<P><STRONG><a name="[6c]"></a>Standard_GetInterface</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[6a]"></a>Standard_GetStatus</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[e1]"></a>Standard_SetConfiguration</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[e2]"></a>Standard_SetDeviceFeature</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetDeviceFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetDeviceFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[e5]"></a>Standard_SetEndPointFeature</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, usb_core.o(i.Standard_SetEndPointFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Standard_SetEndPointFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[e4]"></a>Standard_SetInterface</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[d3]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>

<P><STRONG><a name="[68]"></a>SystemInit</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, system_at32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo192M
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(.text)
</UL>
<P><STRONG><a name="[10f]"></a>TMR_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Set_Freq
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
</UL>

<P><STRONG><a name="[110]"></a>TMR_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
</UL>

<P><STRONG><a name="[10d]"></a>TMR_OC1Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
</UL>

<P><STRONG><a name="[10e]"></a>TMR_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
</UL>

<P><STRONG><a name="[10c]"></a>TMR_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_OCStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
</UL>

<P><STRONG><a name="[10b]"></a>TMR_TimeBaseInit</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
</UL>

<P><STRONG><a name="[10a]"></a>TMR_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
</UL>

<P><STRONG><a name="[100]"></a>ToggleDTOG_RX</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(i.ToggleDTOG_RX))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[102]"></a>ToggleDTOG_TX</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(i.ToggleDTOG_TX))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_Reset
</UL>

<P><STRONG><a name="[47]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at32f4xx_it.o(i.USBWakeUp_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBWakeUp_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>USB_Audio_Data_Setup</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, usb_prop.o(i.USB_Audio_Data_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_Audio_Data_Setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>USB_Audio_GetConfigDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(i.USB_Audio_GetConfigDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_Audio_GetConfigDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>USB_Audio_GetDeviceDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(i.USB_Audio_GetDeviceDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_Audio_GetDeviceDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>USB_Audio_GetStringDescriptor</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usb_prop.o(i.USB_Audio_GetStringDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_Audio_GetStringDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USB_Audio_Get_Interface_Setting</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_prop.o(i.USB_Audio_Get_Interface_Setting))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USB_Audio_NoData_Setup</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_prop.o(i.USB_Audio_NoData_Setup))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>USB_Audio_Reset</STRONG> (Thumb, 306 bytes, Stack size 8 bytes, usb_prop.o(i.USB_Audio_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_Audio_Reset &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToggleDTOG_TX
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToggleDTOG_RX
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPType
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxAddr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxAddr
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuffCount
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuffAddr
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Status_Out
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>USB_Audio_SetConfiguration</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usb_prop.o(i.USB_Audio_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_Audio_SetConfiguration &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf1Count
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPDblBuf0Count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>USB_Audio_SetDeviceAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_prop.o(i.USB_Audio_SetDeviceAddress))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USB_Audio_SetInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.USB_Audio_SetInterface))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>USB_Audio_Status_In</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, usb_prop.o(i.USB_Audio_Status_In))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USB_Audio_Status_In &rArr; Audio_SetFreq &rArr; WM8988_Set_Freq &rArr; AT32_SetI2S_FREQ &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetVolume_Speaker
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetVolume_Microphone
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetMute_Speaker
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetMute_Microphone
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>USB_Audio_Status_Out</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.USB_Audio_Status_Out))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>USB_Audio_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_prop.o(i.USB_Audio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_Audio_init &rArr; Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at32f4xx_it.o(i.USB_HP_CAN1_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HP_CAN1_TX_IRQHandler &rArr; CTR_HP
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_HP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[117]"></a>USB_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usb_init.o(i.USB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>USB_Interrupts_Config</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, hw_config.o(i.USB_Interrupts_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>USB_Istr</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, usb_istr.o(i.USB_Istr))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[31]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at32f4xx_it.o(i.USB_LP_CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[104]"></a>USB_SIL_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_sil.o(i.USB_SIL_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_init
</UL>

<P><STRONG><a name="[18]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403avgt7.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>UserToPMABufferCopy</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, usb_mem.o(i.UserToPMABufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UserToPMABufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Audio_SetConfiguration
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_IN_Callback
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[b2]"></a>WM8988_GetMicrophoneBuffer</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, wm8988.o(i.WM8988_GetMicrophoneBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM8988_GetMicrophoneBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S1_GetMicrophoneBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_GetMicrophoneBuffer
</UL>

<P><STRONG><a name="[b4]"></a>WM8988_GetMicrophoneFrameLen</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, wm8988.o(i.WM8988_GetMicrophoneFrameLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM8988_GetMicrophoneFrameLen
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S1_GetMicrophoneFrameLen
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_GetMicrophoneLen
</UL>

<P><STRONG><a name="[b8]"></a>WM8988_Init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, wm8988.o(i.WM8988_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = WM8988_Init &rArr; AT32_I2S_Init &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Clk_TMR1_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Init
</UL>

<P><STRONG><a name="[113]"></a>WM8988_Poll</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, wm8988.o(i.WM8988_Poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM8988_Poll &rArr; AT32_I2C_WriteReg &rArr; AT32_I2C_Timeout &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>WM8988_SetADCMic_Mute</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm8988.o(i.WM8988_SetADCMic_Mute))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetMute_Microphone
</UL>

<P><STRONG><a name="[c0]"></a>WM8988_SetADCMic_Volume</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm8988.o(i.WM8988_SetADCMic_Volume))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetVolume_Microphone
</UL>

<P><STRONG><a name="[be]"></a>WM8988_SetDACSpk_Mute</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm8988.o(i.WM8988_SetDACSpk_Mute))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetMute_Speaker
</UL>

<P><STRONG><a name="[c2]"></a>WM8988_SetDACSpk_Volume</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm8988.o(i.WM8988_SetDACSpk_Volume))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetVolume_Speaker
</UL>

<P><STRONG><a name="[ba]"></a>WM8988_Set_Freq</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, wm8988.o(i.WM8988_Set_Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WM8988_Set_Freq &rArr; AT32_SetI2S_FREQ &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_SetI2S_FREQ
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_SetFreq
</UL>

<P><STRONG><a name="[c4]"></a>WM8988_WriteSpeakerBuffer</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm8988.o(i.WM8988_WriteSpeakerBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WM8988_WriteSpeakerBuffer &rArr; AT32_I2S1_WriteDataToSpkFifoBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2S1_WriteDataToSpkFifoBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_WriteDataToSpeakerBuffer
</UL>

<P><STRONG><a name="[7f]"></a>main</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; Audio_Init &rArr; WM8988_Init &rArr; AT32_I2S_Init &rArr; I2S_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Poll
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USB768ByteMode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_USB_GPIO_init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_LEDn_Toggle
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_Board_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[79]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[145]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[146]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[db]"></a>IntToUnicode</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, hw_config.o(i.IntToUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
</UL>

<P><STRONG><a name="[e8]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_at32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSysClock &rArr; SetSysClockTo192M
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo192M
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e9]"></a>SetSysClockTo192M</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, system_at32f4xx.o(i.SetSysClockTo192M))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClockTo192M
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[cb]"></a>DataStageIn</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, usb_core.o(i.DataStageIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>

<P><STRONG><a name="[cf]"></a>DataStageOut</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, usb_core.o(i.DataStageOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
</UL>

<P><STRONG><a name="[d2]"></a>Data_Setup0</STRONG> (Thumb, 628 bytes, Stack size 40 bytes, usb_core.o(i.Data_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[e0]"></a>NoData_Setup0</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, usb_core.o(i.NoData_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NoData_Setup0 &rArr; Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetInterface
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetEndPointFeature
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetDeviceFeature
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetConfiguration
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[98]"></a>AT32_I2C_Timeout</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm8988_i2c.o(i.AT32_I2C_Timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AT32_I2C_Timeout &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>

<P><STRONG><a name="[9b]"></a>I2C_Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm8988_i2c.o(i.I2C_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT32_I2C_WriteReg
</UL>

<P><STRONG><a name="[109]"></a>WM8988_Clk_TMR1_Init</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, wm8988.o(i.WM8988_Clk_TMR1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM8988_Clk_TMR1_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OCStructInit
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1PreloadConfig
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1Init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_CtrlPWMOutputs
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8988_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
